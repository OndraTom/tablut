package tablut.gui;

import java.awt.Dimension;
import java.awt.Label;
import java.awt.Toolkit;

/**
 * GUI pro zobrazení pravidel hry.
 *
 * @author Ondřej Tom
 */
public class GUIRules extends javax.swing.JFrame
{
	/**
	 * Creates new form GUIRules
	 */
	public GUIRules()
	{
		// Zamezení roztahování okna.
		setResizable(false);

		initComponents();

		Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();
		setLocation(((screenDim.width - getSize().width) / 2), (screenDim.height - getSize().height) / 2);

		// Při zavření framu pouze schovat.
		setDefaultCloseOperation(HIDE_ON_CLOSE);
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        label1.setText("Rules");

        jLabel1.setText("<html>\n<p>Tablut is played on a board of 9×9 squares.</p>\n<br>\n<p>There are 25 pieces: a king and his eight defenders (swedes - yellow), and sixteen attackers (russians - black)<br> These are placed in the shape of a cross with serifs.</p>\n<br>\n<p>The attacking side takes the first move.</p>\n<br>\n<p>Pieces move any distance orthogonally, not landing on nor jumping over other pieces on the board.</p>\n<br>\n<p>No piece may land on the central square, called the \"castle\" or on the corner squares.</p>\n<br>\n<p>A piece other than the king is captured when it is surrounded orthogonally on two opposite squares by enemies.<br>The king can not pair up with a defender for the purpose of capturing attackers.</p>\n<br>\n<p>A piece may also be captured between an enemy and the empty castle or corner square.</p>\n<br>\n<p>The king is captured by surrounding him on four orthogonal sides with attackers.</p>\n<br>\n<p>When stood beside the castle or corner square, the king may be captured by surrounding him on the remaining three sides with attackers.</p>\n<br>\n<p>The king wins the game on reaching any corner square. The attackers win if they capture the king.</p>\n</html>");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
